// Mocks generated by Mockito 5.4.6 from annotations
// in poison_app/test/unit_tests/auth_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:poison_app/backend/database_helper.dart' as _i3;
import 'package:poison_app/models/address.dart' as _i6;
import 'package:poison_app/models/order.dart' as _i7;
import 'package:poison_app/models/product.dart' as _i5;
import 'package:poison_app/models/user.dart' as _i8;
import 'package:sqflite/sqflite.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDatabase_0 extends _i1.SmartFake implements _i2.Database {
  _FakeDatabase_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i3.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Database> get database => (super.noSuchMethod(
        Invocation.getter(#database),
        returnValue: _i4.Future<_i2.Database>.value(_FakeDatabase_0(
          this,
          Invocation.getter(#database),
        )),
      ) as _i4.Future<_i2.Database>);

  @override
  _i4.Future<int> insertProduct(_i5.Product? product) => (super.noSuchMethod(
        Invocation.method(
          #insertProduct,
          [product],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Product>> getProducts() => (super.noSuchMethod(
        Invocation.method(
          #getProducts,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Product>>.value(<_i5.Product>[]),
      ) as _i4.Future<List<_i5.Product>>);

  @override
  _i4.Future<int> updateProduct(_i5.Product? product) => (super.noSuchMethod(
        Invocation.method(
          #updateProduct,
          [product],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> deleteProduct(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteProduct,
          [id],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<void> insertSampleProducts() => (super.noSuchMethod(
        Invocation.method(
          #insertSampleProducts,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> insertAddress(_i6.Address? address) => (super.noSuchMethod(
        Invocation.method(
          #insertAddress,
          [address],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i6.Address>> getAddresses(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getAddresses,
          [userId],
        ),
        returnValue: _i4.Future<List<_i6.Address>>.value(<_i6.Address>[]),
      ) as _i4.Future<List<_i6.Address>>);

  @override
  _i4.Future<int> updateAddress(_i6.Address? address) => (super.noSuchMethod(
        Invocation.method(
          #updateAddress,
          [address],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> deleteAddress(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteAddress,
          [id],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> insertOrder(_i7.Order? order) => (super.noSuchMethod(
        Invocation.method(
          #insertOrder,
          [order],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i7.Order>> getOrders(int? userId) => (super.noSuchMethod(
        Invocation.method(
          #getOrders,
          [userId],
        ),
        returnValue: _i4.Future<List<_i7.Order>>.value(<_i7.Order>[]),
      ) as _i4.Future<List<_i7.Order>>);

  @override
  _i4.Future<List<_i7.Order>> getPendingPaymentOrders(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingPaymentOrders,
          [userId],
        ),
        returnValue: _i4.Future<List<_i7.Order>>.value(<_i7.Order>[]),
      ) as _i4.Future<List<_i7.Order>>);

  @override
  _i4.Future<List<_i7.Order>> getPendingShipmentOrders(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingShipmentOrders,
          [userId],
        ),
        returnValue: _i4.Future<List<_i7.Order>>.value(<_i7.Order>[]),
      ) as _i4.Future<List<_i7.Order>>);

  @override
  _i4.Future<List<_i7.Order>> getPendingReceiptOrders(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingReceiptOrders,
          [userId],
        ),
        returnValue: _i4.Future<List<_i7.Order>>.value(<_i7.Order>[]),
      ) as _i4.Future<List<_i7.Order>>);

  @override
  _i4.Future<List<_i7.Order>> getPendingEvaluationOrders(int? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPendingEvaluationOrders,
          [userId],
        ),
        returnValue: _i4.Future<List<_i7.Order>>.value(<_i7.Order>[]),
      ) as _i4.Future<List<_i7.Order>>);

  @override
  _i4.Future<int> updateOrder(_i7.Order? order) => (super.noSuchMethod(
        Invocation.method(
          #updateOrder,
          [order],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> deleteOrder(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteOrder,
          [id],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<_i6.Address?> getDefaultAddress({int? userId}) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDefaultAddress,
          [],
          {#userId: userId},
        ),
        returnValue: _i4.Future<_i6.Address?>.value(),
      ) as _i4.Future<_i6.Address?>);

  @override
  _i4.Future<void> setDefaultAddress(
    int? id, {
    int? userId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDefaultAddress,
          [id],
          {#userId: userId},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i8.User?> loginUser(
    String? phone,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [
            phone,
            password,
          ],
        ),
        returnValue: _i4.Future<_i8.User?>.value(),
      ) as _i4.Future<_i8.User?>);

  @override
  _i4.Future<int> updateUser(_i8.User? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<_i5.Product?> getProduct(int? id) => (super.noSuchMethod(
        Invocation.method(
          #getProduct,
          [id],
        ),
        returnValue: _i4.Future<_i5.Product?>.value(),
      ) as _i4.Future<_i5.Product?>);

  @override
  _i4.Future<int> updateProductImagePath(
    int? productId,
    String? localImagePath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateProductImagePath,
          [
            productId,
            localImagePath,
          ],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<int> addProductVariant(Map<String, dynamic>? variant) =>
      (super.noSuchMethod(
        Invocation.method(
          #addProductVariant,
          [variant],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getProductVariants(int? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductVariants,
          [productId],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<Map<String, dynamic>>> getProductSpecifications(
          int? productId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getProductSpecifications,
          [productId],
        ),
        returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
            <Map<String, dynamic>>[]),
      ) as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<void> addBrandSpecification(
    int? productId,
    String? brandName,
    String? brandPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addBrandSpecification,
          [
            productId,
            brandName,
            brandPath,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> resetDatabase() => (super.noSuchMethod(
        Invocation.method(
          #resetDatabase,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> updateBrandPath(
    int? productId,
    String? newPath,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateBrandPath,
          [
            productId,
            newPath,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<_i8.User?> getUserByPhone(String? phone) => (super.noSuchMethod(
        Invocation.method(
          #getUserByPhone,
          [phone],
        ),
        returnValue: _i4.Future<_i8.User?>.value(),
      ) as _i4.Future<_i8.User?>);
}
